/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define HRML(k1,k2,k3,k4) &ht LGUI   k1     &ht LALT  k2    &ht LCTRL k3    &ht LSHIFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHIFT k1     &ht RCTRL k2    &ht RALT  k3    &ht RGUI   k4

/ {
    behaviors {
        thm: tap_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <185>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        layer_hold: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-while-undecided;
            retro-tap;
        };

        kb_settings: kb_settings {
            compatible = "zmk,behavior-hold-tap";
            label = "KB_SETTINGS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            flavor = "tap-preferred";
        };

        sticky_capsword: sticky_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "STICKY_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        super_shift: super_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "SUPER_SHIFT";
            bindings = <&kp>, <&sticky_capsword>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            retro-tap;
        };

        td_layer1: td_layer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "Tap dance layer 1";
            #binding-cells = <0>;
            bindings = <&to 1>, <&sl 1>;

            tapping-term-ms = <200>;
        };

        td_layer2: td_layer2 {
            compatible = "zmk,behavior-tap-dance";
            label = "Tap dance layer 2";
            #binding-cells = <0>;
            bindings = <&to 2>, <&sl 2>;

            tapping-term-ms = <200>;
        };

        super_layer1: super_layer1 {
            compatible = "zmk,behavior-hold-tap";
            label = "SUPER_LAYER1";
            bindings = <&mo>, <&td_layer1>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-while-undecided-linger;
            hold-while-undecided;
        };

        super_layer2: super_layer2 {
            compatible = "zmk,behavior-hold-tap";
            label = "SUPER_LAYER2";
            bindings = <&mo>, <&td_layer2>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-while-undecided;
            hold-while-undecided-linger;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <45 46>;
            layers = <0 1>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <40 39>;
            layers = <0 1 2>;
        };

        combo_copy {
            bindings = <&kp RG(C)>;
            key-positions = <2 3>;
        };

        combo_paste {
            bindings = <&kp RG(V)>;
            key-positions = <3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TILDE                &kp N1             &kp N2           &kp N3               &kp N4                    &kp N5                                                   &kp N6             &kp N7             &kp N8                &kp N9            &kp N0                      &key_repeat
&kp TAB                  &kp Q              &kp W            &kp E                &kp R                     &kp T                                                    &kp Y              &kp U              &kp I                 &kp O             &kp P                       &kp BSLH
&mt LEFT_CONTROL ESCAPE  &thm LEFT_SHIFT A  &thm LEFT_ALT S  &thm LEFT_CONTROL D  &thm LEFT_GUI F           &kp G                                                    &kp H              &thm RIGHT_GUI J   &thm RIGHT_CONTROL K  &thm RIGHT_ALT L  &thm RIGHT_SHIFT SEMICOLON  &kp SQT
&kb_settings 5 GRAVE     &kp Z              &kp X            &kp C                &kp V                     &kp B                      &kp PERCENT    &kp AMPERSAND  &kp N              &kp M              &kp COMMA             &kp DOT           &kp FSLH                    &kb_settings 5 MINUS
                                                             &trans               &layer_hold 1 UNDERSCORE  &super_shift LEFT_SHIFT 0  &kp BSPC       &kp SPACE      &super_layer1 1 0  &super_layer2 2 0  &trans
            >;

            label = "Base";
        };

        symbols {
            bindings = <
&trans        &trans                     &trans     &trans     &trans        &trans                                    &kp SEMI   &kp COMMA       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE         &kp AT
&trans        &super_shift LEFT_SHIFT 0  &kp LALT   &kp LCTRL  &kp LEFT_GUI  &kp SEMI                                  &kp EXCL   &kp LEFT_BRACE  &kp SQT               &kp DOUBLE_QUOTES      &kp RIGHT_BRACE   &kp QUESTION
&kp CAPSLOCK  &kp RET                    &kp SPACE  &kp TAB    &kp BSPC      &kp COMMA                                 &kp POUND  &kp CARET       &kp UNDERSCORE        &kp EQUAL              &kp DOLLAR        &kp STAR
&kp TILDE     &kp SLASH                  &kp MINUS  &kp PLUS   &kp TILDE     &kp PERIOD  &kp PERCENT    &kp AMPERSAND  &kp PIPE   &kp LESS_THAN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp BACKSLASH
                                                    &trans     &trans        &kp COLON   &to 0          &kp COLON      &to 2      &trans          &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &to 0     &trans  &to 3   &trans  &trans
            >;
        };

        functions {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &to 0     &trans  &to 4   &trans  &trans
            >;
        };

        configs {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &to 0     &trans  &trans  &trans  &trans
            >;
        };

        keyboard_settings {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &none       &none  &none      &none  &none  &none
&none       &bt BT_PRV    &bt BT_NXT    &none         &none         &bt BT_CLR_ALL                              &none       &none  &none      &none  &none  &none
&none       &none         &none         &none         &none         &none                                       &none       &none  &none      &none  &none  &none
&trans      &none         &none         &none         &none         &none           &none          &none        &none       &none  &none      &none  &none  &trans
                                        &soft_off     &none         &sys_reset      &bootloader    &bootloader  &sys_reset  &none  &soft_off
            >;
        };
    };
};
