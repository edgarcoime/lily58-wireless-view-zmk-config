/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define HRML(k1,k2,k3,k4) &ht LGUI   k1     &ht LALT  k2    &ht LCTRL k3    &ht LSHIFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHIFT k1     &ht RCTRL k2    &ht RALT  k3    &ht RGUI   k4

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <125>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        thm: tap_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp CAPSLOCK              &kp N1       &kp N2       &kp N3        &kp N4         &kp N5                              &kp N6     &kp N7         &kp N8        &kp N9       &kp N0          &kp MINUS
&kp TAB                   &kp Q        &kp W        &kp E         &kp R          &kp T                               &kp Y      &kp U          &kp I         &kp O        &kp P           &kp BACKSLASH
&thm LEFT_CONTROL ESCAPE  &thm LGUI A  &thm LALT S  &thm LCTRL D  &thm LSHIFT F  &kp G                               &kp H      &thm RSHIFT J  &thm RCTRL K  &thm RALT L  &thm RGUI SEMI  &kp SINGLE_QUOTE
&kp GRAVE                 &kp Z        &kp X        &kp C         &kp V          &kp B   &kp PERCENT      &kp AT     &kp N      &kp M          &kp COMMA     &kp DOT      &kp FSLH        &kp RSHFT
                                                    &mo 4         &mo 2          &mo 1   &kp BACKSPACE    &kp SPACE  &kp ENTER  &mo 3          &kp TILDE
            >;
        };

        symbols {
            bindings = <
&trans    &trans    &trans     &trans     &trans     &trans                              &kp SEMI       &kp COMMA       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE         &kp PIPE
&trans    &kp LGUI  &kp LALT   &kp LCTRL  &kp RSHFT  &kp SEMI                            &kp EXCL       &kp LEFT_BRACE  &kp SQT               &kp DOUBLE_QUOTES      &kp RIGHT_BRACE   &kp QUESTION
&kp CAPS  &kp RET   &kp SPACE  &kp TAB    &kp BSPC   &kp DOT                             &kp HASH       &kp CARET       &kp UNDERSCORE        &kp EQUAL              &kp DOLLAR        &kp STAR
&trans    &trans    &trans     &kp BSPC   &kp DEL    &kp AT    &kp PERCENT    &kp AT     &kp PLUS       &kp LESS_THAN   &kp MINUS             &kp PIPE               &kp GREATER_THAN  &kp FSLH
                               &trans     &trans     &trans    &trans         &kp COLON  &kp AMPERSAND  &kp LBKT        &kp RBKT
            >;
        };

        numpad {
            bindings = <
&trans  &trans    &trans     &trans     &trans     &trans                    &trans   &kp KP_NUMLOCK  &kp FSLH  &kp STAR  &kp MINUS  &trans
&trans  &kp LGUI  &kp LALT   &kp LCTRL  &kp RSHFT  &trans                    &trans   &kp N7          &kp N8    &kp N9    &kp PLUS   &trans
&trans  &kp RET   &kp SPACE  &kp TAB    &kp BSPC   &trans                    &trans   &kp N4          &kp N5    &kp N6    &kp PLUS   &trans
&trans  &trans    &trans     &kp BSPC   &kp DEL    &trans  &trans    &trans  &trans   &kp N1          &kp N2    &kp N3    &kp RET    &trans
                             &trans     &trans     &trans  &trans    &kp N0  &kp DOT  &trans          &kp RET
            >;
        };

        functions {
            bindings = <
&trans  &trans    &trans             &trans            &trans           &trans                    &kp F1    &kp F2     &kp F3     &kp F4     &kp F5           &kp F6
&trans  &kp LGUI  &kp LALT           &kp LCTRL         &kp RSHFT        &trans                    &kp F7    &kp F8     &kp F9     &kp F10    &kp F11          &kp F12
&trans  &trans    &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans                    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp INSERT       &kp C_PAUSE
&trans  &trans    &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans  &trans    &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp PRINTSCREEN  &kp SCROLLLOCK
                                     &trans            &trans           &trans  &trans    &trans  &trans    &trans     &trans
            >;
        };

        configs {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none  &none  &none  &none  &none  &none
&bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &none         &none         &none                         &none  &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &none         &none    &none  &none  &none  &none  &none  &none  &none
                                            &none         &none         &none         &none    &none  &none  &none  &none
            >;
        };
    };
};
