/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define HRML(k1,k2,k3,k4) &ht LGUI   k1     &ht LALT  k2    &ht LCTRL k3    &ht LSHIFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHIFT k1     &ht RCTRL k2    &ht RALT  k3    &ht RGUI   k4

/ {
    behaviors {
        thm: tap_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        layer_hold: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-while-undecided;
            retro-tap;
        };

        kb_settings: kb_settings {
            compatible = "zmk,behavior-hold-tap";
            label = "KB_SETTINGS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <600>;
            flavor = "tap-preferred";
        };

        sticky_capsword: sticky_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "STICKY_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        super_shift: super_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "SUPER_SHIFT";
            bindings = <&kp>, <&sticky_capsword>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            retro-tap;
            hold-while-undecided-linger;
        };

        td_symbols: td_symbols {
            compatible = "zmk,behavior-tap-dance";
            label = "Tap dance symbols";
            #binding-cells = <0>;
            bindings = <&to 2>, <&sl 2>;

            tapping-term-ms = <200>;
        };

        super_symbols: super_symbols {
            compatible = "zmk,behavior-hold-tap";
            label = "SUPER_SYMBOLS";
            bindings = <&mo>, <&td_symbols>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-while-undecided-linger;
            hold-while-undecided;
        };

        capsnum: capsnum {
            compatible = "zmk,behavior-caps-word";
            label = "CAPSNUM";
            #binding-cells = <0>;
            continue-list = <N0 N2 N3 N4 N5 N6 N7 N8 N9 MINUS PLUS SLASH ASTERISK N1 EQUAL ENTER KP_N0 KP_N1 KP_N2 KP_N3 KP_N4 KP_N5 KP_N6 KP_N7 KP_N8 KP_N9 KP_MINUS KP_PLUS KP_EQUAL KP_ASTERISK KP_ENTER KP_DOT KP_EQUAL_AS400 BACKSPACE DELETE>;
        };

        td_numbers: td_numbers {
            compatible = "zmk,behavior-tap-dance";
            label = "Tap dance numbers";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&to 3>, <&sl 3>;
        };

        super_numbers: super_numbers {
            compatible = "zmk,behavior-hold-tap";
            label = "SUPER_NUMBERS";
            bindings = <&mo>, <&td_numbers>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-while-undecided;
            hold-while-undecided-linger;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <45 46>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <40 39>;
        };

        combo_copy {
            bindings = <&kp RG(C)>;
            key-positions = <2 3>;
        };

        combo_paste {
            bindings = <&kp RG(V)>;
            key-positions = <3 4>;
        };

        combo_cmd_undo {
            bindings = <&kp RG(Z)>;
            key-positions = <0 1>;
        };

        combo_cut {
            bindings = <&kp RG(X)>;
            key-positions = <1 2>;
        };

        combo_c_u {
            bindings = <&kp RC(U)>;
            key-positions = <8 9>;
        };

        combo_c_d {
            bindings = <&kp RC(D)>;
            key-positions = <8 7>;
        };

        combo_ctrl_a {
            bindings = <&kp LC(A)>;
            key-positions = <24 25>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        graphite {
            bindings = <
&mt RA(RC(RG(RIGHT_SHIFT))) TILDE  &kp N1           &kp N2           &kp N3                            &kp N4              &kp N5                                            &kp N6                      &kp N7                    &kp N8                &kp N9            &kp N0            &key_repeat
&kp TAB                            &kp B            &kp L            &kp D                             &kp W               &kp Z                                             &kp SQT                     &kp F                     &kp O                 &kp U             &kp J             &kp SEMI
&mt LEFT_CONTROL ESCAPE            &thm LEFT_GUI N  &thm LEFT_ALT R  &thm LEFT_CONTROL T               &thm LEFT_SHIFT S   &kp G                                             &kp Y                       &thm LEFT_SHIFT H         &thm RIGHT_CONTROL A  &thm RIGHT_ALT E  &thm RIGHT_GUI I  &kp COMMA
&kb_settings 5 GRAVE               &kp Q            &kp X            &kp M                             &kp C               &kp V               &kp PERCENT    &kp AMPERSAND  &kp K                       &kp P                     &kp DOT               &kp MINUS         &kp FSLH          &kb_settings 5 EQUAL
                                                                     &mt RA(RC(RIGHT_SHIFT)) QUESTION  &super_numbers 3 0  &super_symbols 2 0  &kp BSPC       &kp SPACE      &super_shift RIGHT_SHIFT 0  &layer_hold 4 UNDERSCORE  &kp BACKSLASH
            >;

            label = "GRAPH";
        };

        qwerty {
            bindings = <
&mt RA(RC(RIGHT_SHIFT)) TILDE  &kp N1           &kp N2           &kp N3               &kp N4              &kp N5                                            &kp N6                      &kp N7                    &kp N8                &kp N9            &kp N0                    &key_repeat
&kp TAB                        &kp Q            &kp W            &kp E                &kp R               &kp T                                             &kp Y                       &kp U                     &kp I                 &kp O             &kp P                     &kp BSLH
&mt LEFT_CONTROL ESCAPE        &thm LEFT_GUI A  &thm LEFT_ALT S  &thm LEFT_CONTROL D  &thm LEFT_SHIFT F   &kp G                                             &kp H                       &thm LEFT_SHIFT J         &thm RIGHT_CONTROL K  &thm RIGHT_ALT L  &thm RIGHT_GUI SEMICOLON  &kp SQT
&kb_settings 5 GRAVE           &kp Z            &kp X            &kp C                &kp V               &kp B               &kp PERCENT    &kp AMPERSAND  &kp N                       &kp M                     &kp COMMA             &kp DOT           &kp FSLH                  &kb_settings 5 EQUAL
                                                                 &kp QUESTION         &super_numbers 3 0  &super_symbols 2 0  &kp BSPC       &kp SPACE      &super_shift RIGHT_SHIFT 0  &layer_hold 4 UNDERSCORE  &kp MINUS
            >;

            label = "QWERTY";
        };

        symbols {
            bindings = <
&trans        &trans     &trans     &trans     &trans      &trans                                   &trans     &kp COMMA       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE         &trans
&trans        &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT   &kp SEMI                                 &kp EXCL   &kp LEFT_BRACE  &kp SQT               &kp DOUBLE_QUOTES      &kp RIGHT_BRACE   &kp BACKSLASH
&kp CAPSLOCK  &kp RET    &kp SPACE  &kp TAB    &kp BSPC    &kp COMMA                                &kp POUND  &kp CARET       &kp UNDERSCORE        &kp EQUAL              &kp DOLLAR        &kp STAR
&kp TILDE     &kp SLASH  &kp MINUS  &kp PLUS   &kp PERIOD  &kp AT     &kp PERCENT    &kp AMPERSAND  &kp PIPE   &kp LESS_THAN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp QUESTION
                                    &trans     &trans      &to 3      &trans         &kp COLON      &to 0      &trans          &trans
            >;

            label = "SYMBOLS";
        };

        numbers {
            bindings = <
&trans  &trans    &trans     &trans     &trans      &trans                        &kp KP_NUMLOCK  &trans  &trans  &trans  &trans        &trans
&trans  &kp LGUI  &kp LALT   &kp LCTRL  &kp LSHFT   &kp SEMI                      &kp MINUS       &kp N7  &kp N8  &kp N9  &kp PLUS      &trans
&trans  &kp RET   &kp SPACE  &kp TAB    &kp BSPC    &kp COMMA                     &kp N0          &kp N4  &kp N5  &kp N6  &kp ASTERISK  &kp EQUAL
&trans  &trans    &trans     &trans     &kp DELETE  &kp PERIOD  &trans    &trans  &kp DOT         &kp N1  &kp N2  &kp N3  &kp SLASH     &trans
                             &trans     &trans      &to 4       &trans    &kp N0  &to 0           &trans  &trans
            >;

            label = "NUMBERS";
        };

        functions {
            bindings = <
&kp F1  &kp F2    &kp F3    &kp F4     &kp F5     &kp F6                    &kp F7      &kp F8         &kp F9        &kp F10    &kp F11    &kp F12
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                    &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp INS    &kp PRINTSCREEN
&trans  &trans    &trans    &trans     &trans     &trans                    &kp LEFT    &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp ENTER  &kp C_PAUSE
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans  &kp DELETE  &kp BACKSPACE  &kp TAB       &kp SPACE  &kp ENTER  &kp SCROLLLOCK
                            &trans     &trans     &trans  &trans    &trans  &to 0       &trans         &trans
            >;

            label = "FUNCTIONS";
        };

        keyboard_settings {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &to 0       &to 1              &none       &none            &none  &none
&none       &bt BT_PRV    &bt BT_NXT    &none         &none         &bt BT_CLR_ALL                              &none       &kp C_PREV         &kp C_PP    &kp C_NEXT       &none  &none
&none       &none         &none         &none         &none         &none                                       &none       &kp C_VOLUME_DOWN  &kp C_MUTE  &kp C_VOLUME_UP  &none  &none
&trans      &none         &none         &none         &none         &none           &none          &none        &none       &none              &none       &none            &none  &trans
                                        &soft_off     &none         &sys_reset      &bootloader    &bootloader  &sys_reset  &none              &soft_off
            >;

            label = "KB_SETT";
        };
    };
};
